Sketching creative code
Davide Della Casa

SketchPatch is a hobby project, a programming playground site that Sophie McDonald and I launched in the summer of 2009. The originating idea for the site was to build a place where anyone could create, show and collaborate on Processing sketches using only a common web browser.

The need for this actually requires some explanation: at the time of sketchPatch's inception, there were no sites catering for online creative coding. OpenProcessing was already popular as a way to show uploaded sketches, but the elements of online editing and collaboration weren’t there. When we launched, only one other site (HasCanvas) was playing with similar concepts. As strange and remote as it might seem now, in 2009, online coding was new territory to play with. To put a figure like “2009” in a proper “online technology time” perspective, imagine that Google Chrome was only in version two (we are well into the double digits at time of release of this issue) and had just started to support mouse wheel scrolling and form auto fill. Internet Explorer 8 had just launched, with still negligible uptake, and Java was still a popular technology for interactive comment.

In that context, Sophie and I were thinking: What if people didn’t need to download Processing? What if they just went on a page, scribbling stuff and playing with each other’s code? It really was a cool idea, particularly at the time. A few months down the line, and uncountable decisions about look and feel and technical struggles later, we had sketchPatch ready for everyone to play with.

//sketchPatch for education//
One of the ideas behind sketchPatch was to make it immediate and accessible enough that it could be used to learn about coding. That did drive our decision to go with a “light and fun” look and feel as opposed to a “dark and techie” theme. We also fleshed out a “hint” feature that would allow anyone to pick up the basics of Processing with a few examples. 

With our friends at dorkbotlondon, we tried out sketchPatch as a learning and collaboration platform. Working in the round, everyone started to write a simple sketch. After five minutes, the sketch would be passed to the person on the right, who would do some changes and add bits to the original sketch. Since the sketches are all online, passing a sketch is simply a matter of handing over a link or a sketch title. We repeated the passes again and again, until everyone had dabbled with all of the sketches. We had really good feedback from the session. The lack of a deep sense of ownership of any particular sketch really unlocked some free range creativity. The passing method also scaled very well to the knowledge of each participant. A beginner could merely tweak a number, duplicate or delete a line, or add a simple statement. Experts would remix sketches in more complex ways to get more elaborate tweaks.

Following this positive and encouraging session, Sophie scaled things to a wider school context. She held almost a dozen sessions in colleges (you can see some of the activities at http://blog.sketchpatch.net). I think of myself as a very jaded creative coder, but every time I saw the sketches from those school sessions, which were often a first attempt at coding for the students, I’d always find a number of them to be laugh-out-loud funny or quirky and interesting.

//The impact of sketchPatch//
Projects built on sketchPatch are fertile many times over, even before and after they exist. They are fertile ground for the people who play with them as users. They learn things, they have some fun. They don’t necessarily come back, but a project like sketchPatch touches hundreds of people, even if for maybe only five minutes and to a limited degree. We do know that we've influenced a lot of people, even if only ever so slightly, and gave them a taste of first-hand creative coding. But that’s just one level. Sophie and I learned a great deal from it, and met and dealt with dozens of great new people because of it. And the outcome is not just a website. It’s an open source platform that keeps giving even in the form of entirely new incarnations, such as the LiveCodeLab project and workshops at MzTEK. It is an absurd amount of work and stress at times,but I confess, I still look at this IE6-compatible hobby horse from 2009, which is beginning to show its age with subtle and not so subtle cracks, and I think: I don’t know how long this will be able to stand up for, but isn’t this just the best site ever.
